
- name: Checking gerrit secret text In Jenkins
  shell: "java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ get-credentials-as-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" \"{{jenkins_gerrit_secret_ssh}}\" --username {{jenkins_username}} --password {{jenkins_password}}"
  register: gerrit_secret
  ignore_errors: yes
  changed_when: "gerrit_secret.stdout.find(jenkins_gerrit_secret_ssh) == -1"
  become: yes

- name: Copying gerrit-auth xml
  template:
    src: gerrit-auth.xml.j2
    dest: /tmp/gerrit-auth.xml
  when: "gerrit_secret.stdout.find(jenkins_gerrit_secret_ssh) == -1"

- name: Adding gerrit credentials to jenkins
  shell: "cat /tmp/gerrit-auth.xml | java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ create-credentials-by-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" --username {{jenkins_username}} --password {{jenkins_password}}"
  when: "gerrit_secret.stdout.find(jenkins_gerrit_secret_ssh) == -1"

- name: Configure gerrit-trigger plugin
  template:
    src: gerrit-trigger.xml
    dest: "{{jenkins_home_dir}}"
    owner: jenkins
    mode: 0644
  become: yes

- name: restarting jenkins
  service: name=jenkins state=restarted
  become: yes

- name: Wait for Jenkins to start up before proceeding.
  shell: "curl -D - --silent --max-time 5 http://{{ jenkins_ip }}:{{ jenkins_port }}/cli/"
  register: result
  until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
  retries: 60
  delay: 10
  changed_when: false
  check_mode: no

- name: Check directory exists
  file: path={{jenkins_home_dir}}.ssh/ state=directory owner=jenkins group=jenkins
  become: yes

- name: Copy the credentials required for Gerrithub
  become: yes
  copy:
    src: credentials.j2
    dest: "{{jenkins_home_dir}}.ssh/id_rsa"
    owner: jenkins
    mode: 0400

- name: Copy the Jenkins job xml
  template: src=buildJob.xml.j2 dest=/tmp/{{ jenkins_iTrust_bot_job_name }}.xml

- name: Checking available jobs
  become: true
  shell: "java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ list-jobs --username {{jenkins_username}} --password {{jenkins_password}}"
  register: job_gerrit_bot
  changed_when: "job_gerrit_bot.stdout.find(jenkins_iTrust_bot_job_name) == -1"

- name: Creating Jenkins job
  shell: "java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ create-job  {{ jenkins_iTrust_bot_job_name }} < /tmp/{{ jenkins_iTrust_bot_job_name }}.xml --username {{jenkins_username}} --password {{jenkins_password}}"
  when: "job_gerrit_bot.stdout.find(jenkins_iTrust_bot_job_name) == -1"