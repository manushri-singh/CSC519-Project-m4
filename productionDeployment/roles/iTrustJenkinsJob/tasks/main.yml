- name: Checking git credentials In Jenkins
  shell: "java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ get-credentials-as-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" \"jenkins-github-read-write-user\" --username {{jenkins_username}} --password {{jenkins_password}}"
  register: git_creds
  ignore_errors: yes
  changed_when: "git_creds.stdout.find('jenkins-github-read-write-user') == -1"
  become: yes

- name: Checking git secret text In Jenkins
  shell: "java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ get-credentials-as-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" \"{{jenkins_git_secret_text}}\" --username {{jenkins_username}} --password {{jenkins_password}}"
  register: git_secret
  ignore_errors: yes
  changed_when: "git_secret.stdout.find(jenkins_git_secret_text) == -1"
  become: yes

- name: Copying credentials xml
  template:
    src: gitCredentials.xml.j2
    dest: /tmp/credentials.xml
  when: "git_creds.stdout.find('jenkins-github-read-write-user') == -1"

- name: Copying secrets xml
  template:
    src: gitSecretText.xml.j2
    dest: /tmp/secrets.xml
  when: "git_secret.stdout.find(jenkins_git_secret_text) == -1"

- name: Adding credentials to jenkins for Gitclone
  shell: "cat /tmp/credentials.xml | java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ create-credentials-by-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" --username {{jenkins_username}} --password {{jenkins_password}}"
  when: "git_creds.stdout.find('jenkins-github-read-write-user') == -1"

- name: Adding secrets to jenkins for Git hooks
  shell: "cat /tmp/secrets.xml | java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ create-credentials-by-xml \"SystemCredentialsProvider::SystemContextResolver::jenkins\" \"(global)\" --username {{jenkins_username}} --password {{jenkins_password}}"
  when: "git_secret.stdout.find(jenkins_git_secret_text) == -1" 

- name: Remove Github previous configurations
  file:
    path: "{{jenkins_home_dir}}/github-plugin-configuration.xml"
    state: absent
  become: yes

- name: Configuring github plugin
  template:
    src: gitConfigure.xml
    dest: "{{jenkins_home_dir}}/github-plugin-configuration.xml"
  mode: 0644
  become: yes

- name: Restarting jenkins
  service: name=jenkins state=restarted
  become: yes

- name: Wait for Jenkins to start up before proceeding.
  shell: "curl -D - --silent --max-time 5 http://{{ jenkins_ip }}:{{ jenkins_port }}/cli/"
  register: result
  until: (result.stdout.find("403 Forbidden") != -1) or (result.stdout.find("200 OK") != -1) and (result.stdout.find("Please wait while") == -1)
  retries: 60
  delay: 10
  changed_when: false
  check_mode: no

- name: Create a template file for iTrust build job
  template: src=iTrust-job.xml.j2 dest=/tmp/itrust_temp.xml

- name: Check if job exists
  shell: "java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ list-jobs --username {{jenkins_username}} --password {{jenkins_password}}"
  register: jenkins_cb_stat

- name: create iTrust jenkins jobs with xml files
  become: yes
  shell: "java -jar {{ jenkins_cli_jar_loc }}/jenkins-cli.jar -s http://{{ jenkins_ip }}:{{ jenkins_port }}/ create-job {{ jenkins_iTrust_job_name }} < /tmp/itrust_temp.xml --username {{jenkins_username}} --password {{jenkins_password}}"
  when: jenkins_cb_stat.stdout.find(jenkins_iTrust_job_name)==-1

- name: Remove previous secrets of nodes
  file:
    path: "{{jenkins_home_dir}}/secret-nodes.yml"
    state: absent
  become: yes

- name: Remove previous playbook versions
  file:
    path: "{{jenkins_home_dir}}/deploy"
    state: absent
  become: yes

- name: Copy secrets required for deploying
  become: yes
  copy:
    src: secret-nodes.yml
    dest: "{{jenkins_home_dir}}"
    owner: jenkins
    mode: 0400
    
- name: Copy deployment playbook
  become: yes
  copy:
    src: iTrustDeploy/
    dest: "{{jenkins_home_dir}}/deploy"
    owner: jenkins

- name: Copy vault pass
  become: yes
  copy:
    src: vault-pass.txt
    dest: "{{jenkins_home_dir}}deploy/vault-pass.txt"
    owner: jenkins

- name: Copy inventory
  become: yes
  template:
    src: inventory-deploy.yml.j2
    dest: "{{jenkins_home_dir}}/deploy/inventory-deploy.yml"
    owner: jenkins
